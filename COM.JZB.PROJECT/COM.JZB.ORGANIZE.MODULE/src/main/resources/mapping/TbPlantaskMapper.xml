<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jzb.org.dao.TbPlantaskMapper">
    <select id="getPantaskList1" parameterType="java.util.Map" resultType="java.util.Map">
WITH RECURSIVE item AS (
(
	SELECT
		id,
		planid,
		cdid,
		uid,
		dutyid,
		plancontent,
		starttime,
		endtime,
		acceptors,
		executors,
		assistants,
		outcome,
		tasktype,
		taskstatus	,
		notes,
		path,
		filenames,
		addid,
		review,
		parentid,
		sort,
		progressofwork
	FROM
		${tabname}
    where parentid= '0000000' and  node=#{node}
    and status=0
    <if test="bumen!=null and bumen!=''">
			and cdid like '%${bumen}%'
	</if>
	<if test="ktime!=null and ktime!='' and etime!=null and etime!=''">
		 	and
		 	 starttime &lt;=${etime}
			and endtime >=${ktime}


	</if>
	<if test="zhuangtai!=null and zhuangtai!=''">
			and tasktype  like '%${zhuangtai}%'
	</if>
		<if test="touid!=null and touid!=''">
			and (
			acceptors like '%${touid}%'
			or
			assistants like'%${touid}%'
			or
			executors like '%${touid}%'
			or
			uid ='%${touid}%'
			)
		</if>


    LIMIT #{pagesize} OFFSET #{pageno}
)
	UNION all
	SELECT
		itema.id,
		itema.planid,
		itema.cdid,
		itema.uid,
		itema.dutyid,
		itema.plancontent,
		itema.starttime,
		itema.endtime,
		itema.acceptors,
		itema.executors,
		itema.assistants,
		itema.outcome,
		itema.tasktype,
		itema.taskstatus,
		itema.notes,
		itema.path,
		itema.filenames,
		itema.addid,
		itema.review,
		itema.parentid,
		itema.sort,
		itema.progressofwork
	FROM
		${tabname} itema
		 JOIN item ON itema.parentid = item.planid
		and itema.node = #{node}
		and itema.status=0
		<if test="bumen!=null and bumen!=''">
			and itema.cdid like '%${bumen}%'
		</if>
		<if test="ktime!=null and ktime!=''">
			and itema.starttime &lt;=${etime} and itema.endtime >=${ktime}
		</if>

		<if test="zhuangtai!=null and zhuangtai!=''">
			and itema.tasktype  like '%${zhuangtai}%'
		</if>
	)

SELECT
	item.*
FROM
	item
ORDER BY
	item.id asc

    </select>

	<select id="getPantaskCount"  parameterType="java.util.Map" resultType="java.lang.Integer">
	SELECT
		count(1)
	FROM
		${tabname}
    where node = '1'
		AND status = 0
		<if test="ktime!=null and ktime!=''">
			and starttime &lt;=${etime} and endtime >=${ktime}
		</if>

		<if test="zhuangtai!=null and zhuangtai!=''">
			and tasktype  like '%${zhuangtai}%'
		</if>
		<if test="touid!=null and touid!=''">
			and (
			acceptors like '%${touid}%'
			or
			assistants like'%${touid}%'
			or
			executors like '%${touid}%'
			or
			uid ='%${touid}%'
			)
		</if>

    </select>

	<!--新建计划任务-->
	<insert id="addPlantaskBrother" parameterType="java.util.Map">
		INSERT INTO ${tabname}
		( "planid", "cdid", "uid", "dutyid", "plancontent",
		  "acceptors", "executors", "assistants", "outcome",
		 "tasktype", "taskstatus", "notes", "path", "filenames", "addid",
		  "review", "parentid", "sort", "node","starttime","endtime","addtime","uptime","status","ptype",progressofwork)
		VALUES
		<foreach collection="inerlist" index="index" item="item"  separator=",">
		(
		<choose>
			<when test="item.planid !=null and item.planid !=''">
				#{item.planid},
			</when>
			<otherwise>
				null ,
			</otherwise>
		</choose>
		<choose>
			<when test="item.cdid !=null and item.cdid !=''">
				#{item.cdid},
			</when>
			<otherwise>
				null ,
			</otherwise>
		</choose>
		<choose>
			<when test="item.uid !=null and item.uid !=''">
				#{item.uid},
			</when>
			<otherwise>
				null ,
			</otherwise>
		</choose>
		<choose>
			<when test="item.dutyid !=null and item.dutyid !=''">
				#{item.dutyid},
			</when>
			<otherwise>
				null ,
			</otherwise>
		</choose>
		<choose>
			<when test="item.plancontent !=null and item.plancontent !=''">
				#{item.plancontent},
			</when>
			<otherwise>
				null ,
			</otherwise>
		</choose>
		<choose>
			<when test="item.acceptors !=null and item.acceptors !=''">
				#{item.acceptors},
			</when>
			<otherwise>
				null ,
			</otherwise>
		</choose>
		<choose>
			<when test="item.executors !=null and item.executors !=''">
				#{item.executors},
			</when>
			<otherwise>
				null ,
			</otherwise>
		</choose>
		<choose>
			<when test="item.assistants !=null and item.assistants !=''">
				#{item.assistants},
			</when>
			<otherwise>
				null ,
			</otherwise>
		</choose>
		<choose>
			<when test="item.outcome !=null and item.outcome !=''">
				#{item.outcome},
			</when>
			<otherwise>
				null ,
			</otherwise>
		</choose>
		<choose>
			<when test="item.tasktype !=null and item.tasktype !=''">
				#{item.tasktype},
			</when>
			<otherwise>
				null ,
			</otherwise>
		</choose>
		<choose>
			<when test="item.taskstatus !=null and item.taskstatus !=''">
				#{item.taskstatus},
			</when>
			<otherwise>
				null ,
			</otherwise>
		</choose>
		<choose>
			<when test="item.notes !=null and item.notes !=''">
				#{item.notes},
			</when>
			<otherwise>
				null ,
			</otherwise>
		</choose>
		<choose>
			<when test="item.path !=null and item.path !=''">
				#{item.path},
			</when>
			<otherwise>
				null ,
			</otherwise>
		</choose>
		<choose>
			<when test="item.filenames !=null and item.filenames !=''">
				#{item.filenames},
			</when>
			<otherwise>
				null ,
			</otherwise>
		</choose>
		<choose>
			<when test="item.addid !=null and item.addid !=''">
				#{item.addid},
			</when>
			<otherwise>
				null ,
			</otherwise>
		</choose>
		<choose>
			<when test="item.review !=null and item.review !=''">
				#{item.review},
			</when>
			<otherwise>
				null ,
			</otherwise>
		</choose>
		<choose>
			<when test="item.parentid !=null and item.parentid !=''">
				#{item.parentid},
			</when>
			<otherwise>
				'0000000',
			</otherwise>
		</choose>
		<choose>
			<when test="item.sort !=null and item.sort !=''">
				#{item.sort},
			</when>
			<otherwise>
				null ,
			</otherwise>
		</choose>
		<choose>
			<when test="item.node !=null and item.node !=''">
				#{item.node},
			</when>
			<otherwise>
				null ,
			</otherwise>
		</choose>

		<choose>
			<when test="item.starttime !=null and item.starttime !=''">
				${item.starttime},
			</when>
			<otherwise>
				null ,
			</otherwise>
		</choose>
		<choose>
			<when test="item.endtime !=null and item.endtime !=''">
				${item.endtime},
			</when>
			<otherwise>
				null ,
			</otherwise>
		</choose>
		<choose>
			<when test="item.addtime !=null and item.addtime !=''">
				#{item.addtime},
			</when>
			<otherwise>
				null ,
			</otherwise>
		</choose>
			<choose>
				<when test="item.uptime !=null and item.uptime !=''">
					#{item.uptime},
				</when>
				<otherwise>
					null,
				</otherwise>
			</choose>
			<choose>
				<when test="item.status !=null and item.status !=''">
					#{item.status},
				</when>
				<otherwise>
					0,
				</otherwise>
			</choose>
			<choose>
				<when test="ptype !=null and ptype !=''">
					'${ptype}',
				</when>
				<otherwise>
					null,
				</otherwise>
			</choose>
			0
		)
		</foreach>
	</insert>

	<!--修改计划管理-->
	<update id="updatePlantask" parameterType="java.util.Map" >
		<foreach collection="uplist" index="index" item="item"  separator=";"  >
		UPDATE ${tabname}
		SET
		<if test="item.cdid != null and item.cdid!=''">cdid=#{item.cdid},</if>
		<if test="item.dutyid != null and item.dutyid!=''">dutyid=#{item.dutyid},</if>
		<if test="item.plancontent != null and item.plancontent!=''">plancontent=#{item.plancontent},</if>
		<if test="item.starttime != null and item.starttime!=''">starttime=${item.starttime},</if>
		<if test="item.endtime != null and item.endtime!=''">endtime=${item.endtime},</if>
		<if test="item.acceptors != null and item.acceptors!=''">acceptors=#{item.acceptors},</if>
		<if test="item.executors != null and item.executors!=''">executors=#{item.executors},</if>
		<if test="item.assistants != null and item.assistants!=''">assistants=#{item.assistants},</if>
		<if test="item.outcome != null and item.outcome!=''">outcome=#{item.outcome},</if>
		<if test="item.tasktype != null and item.tasktype!=''">tasktype=#{item.tasktype},</if>
		<if test="item.taskstatus != null and item.taskstatus!=''">taskstatus=#{item.taskstatus},</if>
		<if test="item.path != null and item.path!=''">path=#{item.path},</if>
		<if test="item.filenames != null and item.filenames!=''">filenames=#{item.filenames},</if>
		<if test="item.review != null and item.review!=''">review=#{item.review},</if>
		<if test="item.sort != null and item.sort!=''">sort=#{item.sort},</if>
			<if test="item.node != null and item.node!=''">node=#{item.node},</if>
			<if test="item.notes != null and item.notes!=''">notes=#{item.notes},</if>
		<if test="item.status != null and item.status!=''">status=#{item.status},</if>
		<if test="item.addtime != null and item.addtime!=''">addtime=#{item.addtime},</if>
		<if test="item.uptime != null and item.uptime!=''">uptime=#{item.uptime}</if>


		where planid=#{item.planid}
		</foreach>

	</update>


	<select id="getCompanydeptMap" resultType="java.util.Map">
		select cdid,cname from tb_company_dept
			where  cid='JZB0001' and cname not in ('资源池')
	</select>

	<!--删除计划管理-->
	<update id="delPlantask" parameterType="java.util.Map" >
			UPDATE tb_plantask SET
			status=1,
			uptime=#{uptime}
			where planid=#{planid} and node=#{node}

	</update>


	<select id="selPantaskids" parameterType="java.util.Map" resultType="java.util.Map">
		select planid from
		${tabname}
   		where
   		planid in (${planids})
	</select>


	<select id="getPantaskDas" parameterType="java.util.Map" resultType="java.util.Map">
   		select planid,
		cdid,
		uid,
		dutyid,
		plancontent,
		starttime,
		endtime,
		acceptors,
		executors,
		assistants,
		outcome,
		tasktype,
		taskstatus	,
		notes,
		path,
		filenames,
		addid,
		review,
		parentid,
		sort,progressofwork from tb_plantask
		where
		(acceptors like '%${uid}%' or assistants like'%${uid}%' or executors like '%${uid}%' or uid like  '%${uid}%')
		and (starttime &lt;${endtime} and endtime >${starttime}) and status=0 and progressofwork &lt; 100
		and tasktype not in('已终止')
		order by addtime asc
	</select>

	<select id="getPantaskDasXiangxi" parameterType="java.util.Map" resultType="java.util.Map">
   		select planid,
		cdid,
		uid,
		dutyid,
		plancontent,
		starttime,
		endtime,
		acceptors,
		executors,
		assistants,
		outcome,
		tasktype,
		taskstatus	,
		notes,
		path,
		filenames,
		addid,
		review,
		parentid,
		sort,progressofwork from tb_plantask
		where
		planid=#{planid}
	</select>


	<update id="upDayXiangxi" parameterType="java.util.Map" >
			UPDATE tb_plantask
			SET
			<if test="notes != null and notes!=''">notes=#{notes},</if>
			<if test="progressofwork != null and progressofwork!=''">progressofwork=#{progressofwork},</if>
			<if test="tasktype != null and tasktype!=''">tasktype=#{tasktype},</if>
			<if test="uptime != null and uptime!=''">uptime=#{uptime}</if>
			where planid=#{planid}
	</update>



	<select id="selcdids" parameterType="java.lang.String" resultType="java.util.Map">
		select cdid from tb_dept_user
		where uid='${uid}' and cid='JZB0001'
	</select>

	<select id="seluid"  resultType="java.util.Map">
	 select uid,cname from tb_dept_user
		where   cid='JZB0001'
	</select>

		<!--通过父级找子级-->
	<select id="selFu" parameterType="java.util.Map" resultType="java.util.Map">
			WITH RECURSIVE item AS (
			(
				SELECT
					planid,parentid,node,status
				FROM
					tb_plantask
				where planid= #{planid} and  node='1'
				and status=0
			)
				UNION all
				SELECT
					itema.planid,itema.parentid,itema.node,itema.status
				FROM
					 tb_plantask itema
					 JOIN item ON itema.parentid = item.planid
					and itema.node = '1'
					and itema.status=0
				)
			SELECT
				item.*
			FROM
				item
	</select>




	<update id="upDayzhongzhi" parameterType="java.util.Map" >
		UPDATE tb_plantask
		SET

		<if test="tasktype != null and tasktype!=''">tasktype=#{tasktype},</if>
		<if test="uptime != null and uptime!=''">uptime=${uptime}</if>
		where planid=#{planid}


	</update>


	<select id="getPantaskZifu" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
		id,
		planid,
		cdid,
		uid,
		dutyid,
		plancontent,
		starttime,
		endtime,
		acceptors,
		executors,
		assistants,
		outcome,
		tasktype,
		taskstatus,
		notes,
		PATH,
		filenames,
		addid,
		review,
		parentid,
		sort,
		progressofwork
		FROM
		tb_plantask
		WHERE
		node = '1'
		AND status = 0
		<if test="ktime!=null and ktime!=''">
			and starttime &lt;=${etime} and endtime >=${ktime}
		</if>

		<if test="zhuangtai!=null and zhuangtai!=''">
			and tasktype  like '%${zhuangtai}%'
		</if>


		<choose>
			<when test="touid!=null and touid!=''">
				and (
				acceptors like '%${touid}%'
				or
				assistants like'%${touid}%'
				or
				executors like '%${touid}%'
				or
				uid ='${touid}'
				)
			</when>
			<otherwise>
				and (
				acceptors like '%${auid}%'
				or
				assistants like'%${auid}%'
				or
				executors like '%${auid}%'
				or
				uid ='${auid}'
				)
			</otherwise>
		</choose>


		order by parentid,id asc
		LIMIT #{pagesize} OFFSET #{pageno}
	</select>

</mapper>
