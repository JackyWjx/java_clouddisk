<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jzb.auth.dao.AuthUserMapper">
    <!--获取用户基础数据-->
    <select id="queryUserInfo" parameterType="java.util.Map"
            resultType="java.util.Map">
            SELECT
            ul.uid,
            ul.regid,
            ul.idcard,
            ul.cname,
            ul.nickname,
            ul.relphone,
            ul.relmail,
            ul.sex,
            ul.portrait,
            ul.authid,
            ul.sign,
            ul.regtime,
            ul.authtime,
            ul.updtime,
            ul.status,
            ui.age,
            ui.content,
            ui.origin,
            ui.college,
            ui.education,
            ui.likes,
            ui.marriage,
            ui.childs,
            ui.born
            FROM
            tb_user_list ul
            left join
            tb_user_info ui
            on
            ul.uid = ui.uid
            WHERE
            ul.uid = #{uid};
    </select>

    <!--根据id获取角色信息-->
    <select id="queryRoleByUid" parameterType="java.util.Map"
            resultType="java.util.Map">
            SELECT
            c.cname as rolename
            from
            tb_user_role u
            left join
            tb_company_role c
            on
            u.crid = c.crid
            where
            u.uid = #{uid}
            and
            u.cid = #{cid}
    </select>

    <!-- 修改认证用户user_list表信息 -->
    <update id="updateIdentityList" parameterType="java.util.Map">
        UPDATE
        tb_user_list
        SET
        idcard = #{idcard},
        cname = #{cname},
        authtime = #{authtime},
        authid = ${authid},
        relphone = #{relphone},
        sex = #{sex}
        WHERE
        uid = #{uid}
    </update>

    <!-- 加入认证身份证user_info表信息-->
    <insert id="insertIdentityInfo" parameterType="java.util.Map">
        INSERT INTO
        tb_user_info
        ( uid, idcardup, idecarddown, ouid, addtime )
        VALUES
	    (
	     #{uid},
	     #{idcardup},
	     #{idcarddown},
	     #{uid},
	     #{authtime}
	     )
    </insert>

    <!-- 修改用户密码List表信息 -->
    <update id="updateUserPassword" parameterType="java.util.Map">
        UPDATE
        tb_user_list
        SET
        passwd=#{newpassword},
        updtime=#{updtime}
        WHERE
        uid=#{uid}
        <if test="passwd !=null and passwd !=''">
            AND passwd =#{passwd}
        </if>
    </update>

    <!--根据联系方式或者ID获取用户信息-->
    <select id="queryUserIdNameByPhone" parameterType="java.util.Map"
            resultType="java.util.Map">
        SELECT
        uid
        from
        tb_user_key
        where
        keyid =#{phone}
    </select>

    <!--跟据手机号查询注册表中信息 -->
    <select id="searchSendCode" resultType="java.util.Map">
                SELECT ID,
                    uid
                FROM
                    tb_user_key
                WHERE
                    ktid = '1'
                    AND status = '1'
                    AND keyid =#{phone}

    </select>
    <!--最后六位身份证号-->
    <select id="idCardLastSix" resultType="java.util.Map">
        	SELECT uid,idcard FROM tb_user_list  WHERE RIGHT(idcard,6) =#{idcard} and uid=#{uid} and authid !=0
    </select>

    <!--增加用户信息,增加用户注册信息-->
    <insert id="insertUserList">
        INSERT INTO tb_user_list ( uid,cname, passwd, relphone, authid, regtime, status,relmail )
        VALUES
	    (#{uid},#{name},#{passwd},#{phone},#{authid},#{regtime},#{status},#{relmail});
        INSERT INTO tb_user_key ( uid, keyid, ktid, addtime, status )
                VALUES
                 (#{uid},#{phone},#{ktid},#{regtime},#{status})
    </insert>

    <!--通过名字模糊搜索被邀请用户-->
    <select id="searchInvitee" parameterType="java.util.Map"
            resultType="java.util.Map">
            SELECT
            uid,
            cname,
            relphone,
            portrait
            from
            tb_user_list
            where
            cname LIKE CONCAT( #{cname},'%')
            order by
            regtime desc
            limit
            #{pagesize}
            offset
            #{pageno}
    </select>

    <!--查询被邀请人总数-->
    <select id="queryInviteeCount" parameterType="java.util.Map"
            resultType="java.lang.Integer">
            SELECT
            count(1)
            from
            tb_user_list
            where
            cname LIKE CONCAT( #{cname},'%')
    </select>

    <!--根据电话搜索用户-->
    <select id="queryInvitee" parameterType="java.util.Map"
            resultType="java.util.Map">
            SELECT
            uid,
            cname,
            relphone,
            portrait
            from
            tb_user_list
            where
            relphone LIKE CONCAT( #{cname},'%')
            order by
            regtime desc
            limit
            #{pagesize}
            offset
            #{pageno}
    </select>

    <!--根据用户姓名或手机号查询用户id-->
    <select id="searchUserName" resultType="java.util.Map">
        SELECT
        uid,
        cname,
        relphone,
        coalesce(relmail,'') as relmail,coalesce(authid, 0) as authid
        FROM
        tb_user_list
        WHERE
        <if test=" status !=null and status !=''">status = #{status} AND</if>
        (
        cname LIKE'%${value}%'
        OR relphone LIKE'%${value}%')
        <choose>
            <when test="  authid != null and authid !=''and authid ==0">
                and authid = 0
            </when>
            <when test="  authid !=0 and authid !='' and  authid != null ">
                and authid != 0 and authid is not null
            </when>
            <otherwise>

            </otherwise>
        </choose>
        ORDER BY uid LIMIT #{pagesize} OFFSET #{start}
    </select>

    <!--根据用户姓名或手机号查询用户信息总数-->
    <select id="searchUserNameCount" resultType="java.lang.Integer">
        SELECT
        COUNT(1)
        FROM
        tb_user_list ul
        WHERE
        <if test=" status !=null and status !=''">status = #{status} AND</if>
        (
        cname LIKE'%${value}%'
        OR relphone LIKE'%${value}%')
        <choose>
            <when test=" authid != null and authid !=''and authid == 0">
                and authid = 0
            </when>
            <when test=" authid != null and authid !='' and authid !=0 ">
                and authid != 0 and authid is not null
            </when>
            <otherwise>

            </otherwise>
        </choose>
    </select>

    <!-- 点击头像后修改基本资料 -->
    <update id="modifyUserBasicData" parameterType="java.util.Map">
        UPDATE
        tb_user_list
        SET
        relphone = #{relphone},
        updtime = #{updtime}
        <if test="portrait!= null and portrait!= ''">,portrait = #{portrait}</if>
        <if test="cname!= null and cname!= ''">,cname = #{cname}</if>
        <if test="sex!= null and sex!= ''">,sex = #{sex}</if>
        <if test="relmail!= null and relmail!= ''">,relmail = #{relmail}</if>
        <if test="sign!= null and sign!= ''">,sign = #{sign}</if>
        WHERE
        uid = #{uid}
    </update>
    <!--激活修改用户状态-->
    <update id="updateUserStatus">
        update tb_user_list
        set status =#{status},
            updtime=#{updtime}
        where uid = #{uid};
        update tb_user_key
        set status =#{status},
            updtime=#{updtime}
        where uid = #{uid}
          and ktid = '1';
    </update>

    <!--  查询APP—ID 对应的密文数据 -->
    <select id="queryAppSecret" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT client_secret as secret FROM oauth_client_details WHERE client_id = #{appid};
    </select>

    <!-- 根据用户手机号查询用户的信息 -->
    <select id="queryUserByValue" parameterType="java.util.Map"
            resultType="java.util.Map">
        SELECT k.uid FROM
            (SELECT uid FROM tb_user_key WHERE ktid = #{ktid} AND keyid = #{keyid} AND status in ('1','8')) k
                INNER JOIN tb_user_list u ON k.uid = u.uid;
    </select>
    <!--查询用户所有权限-->
    <select id="queryUserMenuList" resultType="java.util.Map">
        SELECT DISTINCT ma.mid,
        COALESCE(ma.pageid,'') AS pageid,
        ma.status
        FROM tb_role_menu_auth ma
        WHERE ma.status = '1'
        AND exists(select 1
        from tb_role_relation rr
        where (
        <if test=" cdid != null and cdid.length!=0">
            (rr.rrtype = '1' and rr.rrid in
            <foreach collection="cdid.split(',')" item="item"
                     index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
            ) or
        </if>
        (rr.rrtype = '2' and exists(select 1
        from tb_user_role u
        where u.uid = #{uid}
        and u.status = '1'
        and u.crid = rr.rrid
        )) or
        (rr.rrtype = '4' and rr.rrid = #{uid}))
        and rr.status = '1'
        and rr.crgid = ma.crgid)
        GROUP BY ma.mid,ma.status,ma.pageid
        order by ma.mid,
        pageid LIMIT #{pagesize}  OFFSET #{start}
    </select>

    <!--增加用户信息,增加用户注册信息-->
    <insert id="insertCompanyEmployee">
        INSERT INTO
        tb_user_list ( uid,cname, passwd, relphone, sex, authid, regtime, authtime, status,relmail )
        VALUES
	    (#{uid},#{cname},#{passwd},#{relphone},#{sex},${authid},#{addtime},#{addtime},#{status},#{relmail});
	    INSERT INTO
	    tb_user_info ( uid, origin, college, education, likes, marriage, born, adduid, addtime, status)
        VALUES
	    (#{uid},#{origin},#{college},#{education},#{likes},#{marriage},
        <choose>
            <when test=" born != null and born !=''">
                ${born},
            </when>
            <otherwise>
                null,
            </otherwise>
        </choose>
	    #{adduid},#{addtime},#{status});
        INSERT INTO
        tb_user_key ( uid, keyid, ktid, addtime, status )
        VALUES
        (#{uid},#{phone},#{ktid},#{addtime},#{status})
    </insert>

    <!-- CRM-销售业主-公海-业主下的人员12-点击业主下的人员中的修改人员按钮进行修改员工信息 -->
    <update id="updateCompanyEmployee" parameterType="java.util.Map">
        UPDATE
        tb_user_list
        SET
        cname = #{cname},
        relphone = #{relphone},
        updtime = #{updtime},
        relmail = #{relmail},
        sex = #{sex}
        WHERE
        uid = #{uid};
        UPDATE
        tb_user_info
        SET
        origin = #{origin},
        college = #{college},
        likes = #{likes},
        education = #{education},
        marriage = #{marriage},
        upduid = #{upduid},
        updtime = #{updtime},
        born = #{born}
        WHERE
        uid = #{uid};
    </update>
</mapper>
